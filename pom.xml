<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>2.3</version>
        <relativePath/>
    </parent>
    <groupId>io.sealights.plugins</groupId>
    <artifactId>sealights-jenkins</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>hpi</packaging>

    <properties>
        <!-- Baseline Jenkins version you use to build the plugin. Users must have this version or newer to run. -->
        <jenkins.version>1.625.3</jenkins.version>
        <!-- Java Level to use. Java 7 required when using core >= 1.612 -->
        <java.level>7</java.level>
        <!-- Jenkins Test Harness version you use to test the plugin. -->
        <!-- For Jenkins version >= 1.580.1 use JTH 2.x or higher. -->
        <jenkins-test-harness.version>2.1</jenkins-test-harness.version>
        <!-- Other properties you may want to use:
             ~ hpi-plugin.version: The HPI Maven Plugin version used by the plugin..
             ~ stapler-plugin.version: The Stapler Maven plugin version required by the plugin.
        -->

        <sealights.version>1.3.157</sealights.version>
        <resources.folder>${basedir}/src/main/resources</resources.folder>
        <artifacts.folder>${resources.folder}/sealights-java-${sealights.version}/artifacts</artifacts.folder>
        <testng.version>6.1.1</testng.version>
    </properties>

    <name>SeaLights Continuous Testing Plugin</name>
    <description>SeaLights Continuous Testing Plugin allows for an easy integration of SeaLights to software projects.</description>
    <url>https://wiki.jenkins-ci.org/display/JENKINS/TODO+Plugin</url>

    <!-- The default licence for Jenkins OSS Plugins is MIT. Substitute for the applicable one if needed. -->

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>sl3vi</id>
            <name>Shahar Levi</name>
            <email>shahar@sealights.io</email>
        </developer>
        <developer>
            <id>nadavye</id>
            <name>Nadav Yeheskel</name>
            <email>nadavr@sealights.io</email>
        </developer>
    </developers>

    <!-- Assuming you want to host on @jenkinsci:
    <scm>
      <connection>scm:git:git://github.com/jenkinsci/${project.artifactId}-plugin.git</connection>
      <developerConnection>scm:git:git@github.com:jenkinsci/${project.artifactId}-plugin.git</developerConnection>
      <url>http://github.com/jenkinsci/${project.artifactId}-plugin</url>
    </scm>
     -->
    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>http://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>http://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>



    <dependencies>
        <!-- ================================================== -->
        <!-- TestNG -->
        <!-- ================================================== -->
        <!--<dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>-->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>

    </dependencies>


    <profiles>
        <profile>
            <id>download-jars</id>
            <build>
                <plugins>
                    <!-- ========================================================================================= -->
                    <!-- 1) Remove all previous JARs -->
                    <!-- ========================================================================================= -->
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.4.1</version>
                        <executions>
                            <execution>
                                <id>clean-old-artifact</id>
                                <phase>clean</phase>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>${resources.folder}</directory>
                                            <includes>
                                                <include>sl-api.jar</include>
                                                <include>sl-build-scanner.jar</include>
                                                <include>sl-test-listener.jar</include>
                                            </includes>
                                        </fileset>
                                    </filesets>
                                </configuration>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- ========================================================================================= -->
                    <!-- 2) Download zip file with SeaLights artifacts  -->
                    <!-- ========================================================================================= -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <version>1.0</version>
                        <executions>
                            <execution>
                                <id>download-sealights</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>download-single</goal>
                                </goals>
                                <configuration>
                                    <url>https://s3-us-west-2.amazonaws.com</url>
                                    <fromFile>sl-agent-repository/sealights-java-${sealights.version}.zip</fromFile>
                                    <toDir>${resources.folder}</toDir>
                                    <toFile>${resources.folder}</toFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- ========================================================================================= -->
                    <!-- 3) Unzip the file -->
                    <!-- ========================================================================================= -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>prepare</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <target>
                                        <echo message="Unzipping SeaLights artifacts file."/>
                                        <unzip src="${resources.folder}/sealights-java-${sealights.version}.zip"
                                               dest="${resources.folder}/"/>
                                        <echo message="Finished unzipping. Copying the files to the resources folder."/>
                                        <copy file="${artifacts.folder}/sl-api-${sealights.version}.jar"
                                              tofile="${resources.folder}/sl-api.jar"/>
                                        <copy file="${artifacts.folder}/sl-test-listener-${sealights.version}.jar"
                                              tofile="${resources.folder}/sl-test-listener.jar"/>
                                        <copy file="${artifacts.folder}/sl-build-scanner-${sealights.version}.jar"
                                              tofile="${resources.folder}/sl-build-scanner.jar"/>
                                        <echo message="Finished copying. Deleting the zip file."/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- ========================================================================================= -->
                    <!-- 4) Delete the zip files and the folder containing the new artifacts  -->
                    <!-- ========================================================================================= -->
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.4.1</version>
                        <executions>
                            <execution>
                                <id>clean-new-resources</id>
                                <phase>verify</phase>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>${resources.folder}</directory>
                                            <includes>
                                                <include>sealights-java-${sealights.version}/**/*.*</include>
                                                <include>sealights-java-${sealights.version}/</include>
                                                <include>sealights-java-${sealights.version}.zip/</include>
                                            </includes>
                                        </fileset>
                                    </filesets>
                                </configuration>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>
