<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
         xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
    <f:section title="SeaLights Continues Testing">

        <f:entry title="App Name" field="appName">
            <f:textbox value="${appName}" default="$${JOB_NAME}"/>
        </f:entry>

        <f:entry title="Branch Name" field="branch">
            <f:textbox default="$${GIT_BRANCH}" value="${branch}"/>
        </f:entry>
<!--
        <f:entry title="Coding Language" field="language" >
            <f:enum>${it.displayName}</f:enum>
        </f:entry>
-->

        <f:entry title="Testing Framework" field="testingFramework" >
            <f:enum>${it.displayName}</f:enum>
        </f:entry>

        <f:entry title="Packages Included" field="packagesIncluded"
                 description="Java packages that will be analyzed by SeaLights. Supports wildcards (* = any string, ? = any character).">
            <f:textbox value="${packagesIncluded}"/>
        </f:entry>

        <!--<f:entry title="Project Type" field="projectType">-->
            <!--<f:enum>${it.displayName}</f:enum>-->
        <!--</f:entry>-->

        <!--<f:entry title="Title" field="theType">-->
            <!--<f:combobox />-->
        <!--</f:entry>-->

        <f:advanced>

            <f:entry title="Build Strategy" field="buildStrategy"
                     description="'One Build': all modules in the project appear in SeaLights' dashboard as a single build with aggregated results. , each module appear as a different application.">
                <f:enum>${it.displayName}</f:enum>
            </f:entry>

            <f:entry title="Packages Excluded" field="packagesExcluded"
                     description="Java packages to exclude from SeaLights' analysis. Supports wildcards (* = any string, ? = any character).">
                <f:textbox value="${packagesExcluded}"/>
            </f:entry>

            <f:entry title="Files Included" field="filesIncluded"
                     description="Files to include in SeaLights' analysis. Supports wildcards (* = any string, ? = any character).">
                <f:textbox value="${filesIncluded}" default="*.class"/>
            </f:entry>

            <f:entry title="Files Excluded" field="filesExcluded"
                     description="Files to exclude from SeaLights' analysis. Supports wildcards (* = any string, ? = any character).">
                <f:textbox value="${filesExcluded}" default="*/test-classes/*"/>
            </f:entry>

            <f:entry title="Environment" field="environment"
                     description="By default is 'Unit Tests'">
                <f:textbox value="${environment}" default="Unit Tests"/>
            </f:entry>

            <f:entry field="relativePathToEffectivePom" title="Project's build file"
                     description="Relative path to build file (e.g in maven : 'dir/pom.xml'. default is 'pom.xml')">
                <f:textbox value="${relativePathToEffectivePom}"/>
            </f:entry>

            <f:entry field="workspacepath" title="Workspace Path"
                     description="Path to a the workspace folder in which the source code exists.">
                <f:textbox value="${workspacepath}" default="$${project.basedir}"/>
            </f:entry>

            <f:entry title="Recursive search on folders tree" field="recursive"
                     description="When checked, the Build Scanner will also go down the Workspace Path folder tree to scan files.">
                <f:checkbox default="true"/>
            </f:entry>

            <f:entry field="testListenerConfigFile" title="SeaLights Additional configuration file (for advanced configuration).">
                <f:textbox value="${testListenerConfigFile}"/>
            </f:entry>

            <!--<f:entry title="Show all modules as a single build" field="buildStrategy"-->
                     <!--description="When checked, all modules in the project appear in SeaLights' dashboard as a single build with aggregated results. When unchecked, each module appear as a different application.">-->
                <!--<f:checkbox/>-->
            <!--</f:entry>-->

            <f:entry title="Module Name" field="moduleName">
                <f:textbox default="$${project.name}" value="${moduleName}"/>
            </f:entry>

            <f:entry title="Restore Build File Automatically" field="autoRestoreBuildFile"
                     description="When checked, SeaLights will automatically try restore the build file. See the 'help' for more information.">
                <f:checkbox default="true"/>
            </f:entry>

            <f:optionalBlock name="multipleBuildFilesOptionalBlock" title="Enable multiple build files" field="${instance.multipleBuildFiles}" inline="true">

                <f:entry title="Folders" field="buildFilesFolders" description="Comma separated list of root folders that contains the build files. The default is the working directory">
                    <f:textbox value="${instance.buildFilesFolders}"/>
                </f:entry>

                <f:entry title="Files Pattern" field="buildFilesPatterns" description="Comma separated list of Wild cards for the files names (e.g 'a?.pom, a_*b.pom'). The default is '*pom.xml'">
                    <f:textbox value="${instance.buildFilesPatterns}"/>
                </f:entry>

            </f:optionalBlock>

            <f:optionalBlock name="overrideJarOptionalBlock" title="Override Jars Locations" inline="true" field="${instance.overrideJars}">
                <f:entry title="Build Scanner JAR Path" field="buildScannerJar"
                         description="Overrides the default Build Scanner JAR with a path to a different Build Scanner. Leave empty to use the default one.">
                    <f:textbox value="${instance.buildScannerJar}"/>
                </f:entry>

                <f:entry title="Test Listener JAR Path" field="testListenerJar"
                         description="Overrides the default Test Listener JAR with a path to a different Test Listener JAR. Leave empty to use the default one.">
                    <f:textbox value="${instance.testListenerJar}"/>
                </f:entry>

                <f:entry title="API JAR Path" field="apiJar"
                         description="Overrides the default API JAR with a path to a different one. Leave empty to use the default one.">
                    <f:textbox value="${instance.apiJar}"/>
                </f:entry>
            </f:optionalBlock>

            <f:optionalBlock name="logsOptionalBlock" title="Enable logs" checked="${instance.logEnabled}" inline="true" field="${instance.logEnabled}">

                <f:entry field="logLevel" title="Log Level">
                    <f:enum>${it.displayName}</f:enum>
                </f:entry>

                <f:entry field="logDestination" title="Logging Destination">
                    <f:enum>${it.displayName}</f:enum>
                </f:entry>

                <!--<f:entry title="Log To File" field="logDestination" description="Check in order to write the logs to a file.">-->
                    <!--<f:checkbox value="${instance.logDestination}"/>-->
                <!--</f:entry>-->

                <f:entry title="Logs Folder" field="logFolder" description="The path in which the logs will be saved.">
                    <f:textbox value="${instance.logFolder}"/>
                </f:entry>

                <!--<f:entry title="Enables logs" field="logEnabled" description="Check to enable SeaLights' logs.">-->
                    <!--<f:checkbox value="${instance.logEnabled}"/>-->
                <!--</f:entry>-->

            </f:optionalBlock>

        </f:advanced>
    </f:section>
</j:jelly>